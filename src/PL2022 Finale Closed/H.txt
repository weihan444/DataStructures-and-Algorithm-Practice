import java.util.*;
import java.io.*;

public class Scratch8 {
    public static void main(String[] args) {
        FastReader fr = new FastReader();
        int n = fr.nextInt();
        for(int i = 0; i < n; i++) {
            int num = fr.nextInt();
            primeFactors(num);
        }
        System.out.println();
    }

    public static void primeFactors(int n)
    {
        // Print the number of 2s that divide n
        int sum = 0;
        int max = Integer.MIN_VALUE;
        while (n % 2 == 0) {
            sum += 2;
            max = 2;
            n /= 2;
        }

        // n must be odd at this point.  So we can
        // skip one element (Note i = i +2)
        for (int i = 3; i <= Math.sqrt(n); i += 2) {
            // While i divides n, print i and divide n
            while (n % i == 0) {
                sum += i;
                max = i;
                n /= i;
            }
        }

        // This condition is to handle the case whien
        // n is a prime number greater than 2
        if (n > 2) {
            max = n;
            sum += n;
        }
        if(isPrime(sum % max)){
            System.out.println("YES");
        }else{
            System.out.println("NO");
        }

    }
    public static boolean isPrime(int n) {
        if (n <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}