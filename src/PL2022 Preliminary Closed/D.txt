import java.util.*;
import java.io.*;

public class scratch_3 {
    private static int max = 0;
    public static void main(String[] args) {
        FastReader fr = new FastReader();
        int V = fr.nextInt();
        int n = fr.nextInt();
        int[] money = new int[n];
        for(int i = 0; i < n; i++){
            money[i] = fr.nextInt();
        }
        dfs(money, 0, V, 0);
        System.out.println(V - max);
    }
    public static void dfs(int[] money, int currSum,int target, int index){
        if(index == money.length){
            return;
        }
        dfs(money, currSum, target, index + 1);
        currSum += money[index];
        if(currSum > target){
            return;
        }
        max = Math.max(max, currSum);
        dfs(money, currSum, target, index + 1);
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader()
        {
            br = new BufferedReader(
                    new InputStreamReader(System.in));
        }

        String next()
        {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() { return Integer.parseInt(next()); }

        long nextLong() { return Long.parseLong(next()); }

        double nextDouble()
        {
            return Double.parseDouble(next());
        }

        String nextLine()
        {
            String str = "";
            try {
                str = br.readLine();
            }
            catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}